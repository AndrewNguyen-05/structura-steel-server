server:
  port: 8010
  servlet:
    context-path: /core-service
  error:
    include-message: always

spring:
  application:
    name: core-service
  profiles:
    active: dev
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        instance-id: ${spring.application.name}:${random.value}
        health-check-path: ${server.servlet.context-path}/actuator/health
        health-check-interval: 30s
        fail-fast: false
        prefer-ip-address: true
        query-passing: true
  datasource:
    url: jdbc:postgresql://localhost:5432/core_service
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:admin}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  sql:
    init:
      mode: never
  task:
    scheduling:
      pool:
        size: 5
  elasticsearch:
    rest:
      uris: http://elasticsearch:9200

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0

keycloak:
  url: ${KC_URI:http://localhost:8008}
  realm:
    master: master
    structura: structura
  client:
    admin-cli: admin-cli
    structura-client: structura-client
  admin:
    username: admin
    password: admin
